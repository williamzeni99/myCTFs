


Gadgets
=======


0x0000000000400898: add al, ch; ret 0xfffd; 
0x000000000040070f: add bl, dh; ret; 
0x000000000040063a: add byte ptr [rax - 0x7b], cl; sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x0000000000400b3d: add byte ptr [rax], al; add bl, dh; ret; 
0x0000000000400b3b: add byte ptr [rax], al; add byte ptr [rax], al; add bl, dh; ret; 
0x0000000000400938: add byte ptr [rax], al; add byte ptr [rax], al; call 0x16c0; nop; leave; ret; 
0x00000000004007e1: add byte ptr [rax], al; add byte ptr [rax], al; call 0x17f1; mov eax, 0; leave; ret; 
0x0000000000400800: add byte ptr [rax], al; add byte ptr [rax], al; call 0x19cd; nop; pop rbp; ret; 
0x00000000004007eb: add byte ptr [rax], al; add byte ptr [rax], al; leave; ret; 
0x00000000004007dd: add byte ptr [rax], al; add byte ptr [rax], bh; call 0x17f1; mov eax, 0; leave; ret; 
0x00000000004007fc: add byte ptr [rax], al; add byte ptr [rax], bh; call 0x19cd; nop; pop rbp; ret; 
0x00000000004007e7: add byte ptr [rax], al; add byte ptr [rax], bh; leave; ret; 
0x0000000000400abd: add byte ptr [rax], al; add byte ptr [rbp + rax - 0x18], dh; test eax, 0xc9fffffb; ret; 
0x00000000004007ec: add byte ptr [rax], al; add cl, cl; ret; 
0x000000000040093a: add byte ptr [rax], al; call 0x16c0; nop; leave; ret; 
0x00000000004007e3: add byte ptr [rax], al; call 0x17f1; mov eax, 0; leave; ret; 
0x0000000000400802: add byte ptr [rax], al; call 0x19cd; nop; pop rbp; ret; 
0x0000000000400901: add byte ptr [rax], al; je 0x190a; call 0x1670; leave; ret; 
0x00000000004009c2: add byte ptr [rax], al; je 0x19cb; call 0x1670; leave; ret; 
0x0000000000400abe: add byte ptr [rax], al; je 0x1ac7; call 0x1670; leave; ret; 
0x00000000004007ed: add byte ptr [rax], al; leave; ret; 
0x0000000000400935: add byte ptr [rax], al; mov eax, 0; call 0x16c0; nop; leave; ret; 
0x00000000004007de: add byte ptr [rax], al; mov eax, 0; call 0x17f1; mov eax, 0; leave; ret; 
0x00000000004007fd: add byte ptr [rax], al; mov eax, 0; call 0x19cd; nop; pop rbp; ret; 
0x00000000004007e8: add byte ptr [rax], al; mov eax, 0; leave; ret; 
0x0000000000400842: add byte ptr [rax], al; mov rdi, rax; call 0x16b0; nop; pop rbp; ret; 
0x0000000000400807: add byte ptr [rax], al; nop; pop rbp; ret; 
0x0000000000400746: add byte ptr [rax], al; pop rbp; ret; 
0x0000000000400b42: add byte ptr [rax], al; sub rsp, 8; add rsp, 8; ret; 
0x0000000000400734: add byte ptr [rax], al; test rax, rax; je 0x1748; pop rbp; mov edi, 0x602070; jmp rax; 
0x0000000000400776: add byte ptr [rax], al; test rax, rax; je 0x1788; pop rbp; mov edi, 0x602070; jmp rax; 
0x0000000000400936: add byte ptr [rax], bh; call 0x16c0; nop; leave; ret; 
0x00000000004007df: add byte ptr [rax], bh; call 0x17f1; mov eax, 0; leave; ret; 
0x00000000004007fe: add byte ptr [rax], bh; call 0x19cd; nop; pop rbp; ret; 
0x00000000004007e9: add byte ptr [rax], bh; leave; ret; 
0x0000000000400745: add byte ptr [rax], r8b; pop rbp; ret; 
0x0000000000400abf: add byte ptr [rbp + rax - 0x18], dh; test eax, 0xc9fffffb; ret; 
0x00000000004007a7: add byte ptr [rcx], al; pop rbp; ret; 
0x00000000004007ee: add cl, cl; ret; 
0x0000000000400636: add eax, 0x2019bd; test rax, rax; je 0x1642; call rax; 
0x0000000000400636: add eax, 0x2019bd; test rax, rax; je 0x1642; call rax; add rsp, 8; ret; 
0x0000000000400ac1: add eax, 0xfffba9e8; dec ecx; ret; 
0x00000000004009c5: add eax, 0xfffca5e8; dec ecx; ret; 
0x0000000000400904: add eax, 0xfffd66e8; dec ecx; ret; 
0x0000000000400896: add eax, dword ptr [rax]; add al, ch; ret 0xfffd; 
0x0000000000400934: add eax, dword ptr [rax]; add byte ptr [rax], bh; call 0x16c0; nop; leave; ret; 
0x0000000000400933: add eax, dword ptr ds:[rax]; add byte ptr [rax], bh; call 0x16c0; nop; leave; ret; 
0x0000000000400643: add esp, 8; ret; 
0x0000000000400642: add rsp, 8; ret; 
0x000000000040073e: and byte ptr [rax], ah; jmp rax; 
0x0000000000400639: and byte ptr [rax], al; test rax, rax; je 0x1642; call rax; 
0x0000000000400639: and byte ptr [rax], al; test rax, rax; je 0x1642; call rax; add rsp, 8; ret; 
0x00000000004008fe: and eax, 0x28; je 0x190a; call 0x1670; leave; ret; 
0x00000000004009bf: and eax, 0x28; je 0x19cb; call 0x1670; leave; ret; 
0x0000000000400abb: and eax, 0x28; je 0x1ac7; call 0x1670; leave; ret; 
0x0000000000400905: call 0x1670; leave; ret; 
0x0000000000400847: call 0x16b0; nop; pop rbp; ret; 
0x000000000040093c: call 0x16c0; nop; leave; ret; 
0x000000000040079d: call 0x1720; mov byte ptr [rip + 0x2018ef], 1; pop rbp; ret; 
0x00000000004007e5: call 0x17f1; mov eax, 0; leave; ret; 
0x0000000000400804: call 0x19cd; nop; pop rbp; ret; 
0x0000000000400dab: call qword ptr [rax]; 
0x0000000000400640: call rax; 
0x0000000000400640: call rax; add rsp, 8; ret; 
0x0000000000400932: cmp eax, 0x33e; mov eax, 0; call 0x16c0; nop; leave; ret; 
0x0000000000400909: dec ecx; ret; 
0x0000000000400b1c: fmul qword ptr [rax - 0x7d]; ret; 
0x0000000000400632: in al, dx; or byte ptr [rax - 0x75], cl; add eax, 0x2019bd; test rax, rax; je 0x1642; call rax; 
0x000000000040063e: je 0x1642; call rax; 
0x000000000040063e: je 0x1642; call rax; add rsp, 8; ret; 
0x0000000000400739: je 0x1748; pop rbp; mov edi, 0x602070; jmp rax; 
0x000000000040077b: je 0x1788; pop rbp; mov edi, 0x602070; jmp rax; 
0x0000000000400903: je 0x190a; call 0x1670; leave; ret; 
0x00000000004009c4: je 0x19cb; call 0x1670; leave; ret; 
0x0000000000400ac0: je 0x1ac7; call 0x1670; leave; ret; 
0x0000000000400eb3: jmp qword ptr [rbp]; 
0x0000000000400741: jmp rax; 
0x0000000000400931: lea edi, [rip + 0x33e]; mov eax, 0; call 0x16c0; nop; leave; ret; 
0x0000000000400930: lea rdi, [rip + 0x33e]; mov eax, 0; call 0x16c0; nop; leave; ret; 
0x00000000004007ef: leave; ret; 
0x00000000004007a2: mov byte ptr [rip + 0x2018ef], 1; pop rbp; ret; 
0x0000000000400937: mov eax, 0; call 0x16c0; nop; leave; ret; 
0x00000000004007e0: mov eax, 0; call 0x17f1; mov eax, 0; leave; ret; 
0x00000000004007ff: mov eax, 0; call 0x19cd; nop; pop rbp; ret; 
0x00000000004007ea: mov eax, 0; leave; ret; 
0x0000000000400635: mov eax, dword ptr [rip + 0x2019bd]; test rax, rax; je 0x1642; call rax; 
0x0000000000400635: mov eax, dword ptr [rip + 0x2019bd]; test rax, rax; je 0x1642; call rax; add rsp, 8; ret; 
0x0000000000400637: mov ebp, 0x48002019; test eax, eax; je 0x1642; call rax; 
0x0000000000400637: mov ebp, 0x48002019; test eax, eax; je 0x1642; call rax; add rsp, 8; ret; 
0x000000000040079b: mov ebp, esp; call 0x1720; mov byte ptr [rip + 0x2018ef], 1; pop rbp; ret; 
0x000000000040073c: mov edi, 0x602070; jmp rax; 
0x0000000000400845: mov edi, eax; call 0x16b0; nop; pop rbp; ret; 
0x0000000000400634: mov rax, qword ptr [rip + 0x2019bd]; test rax, rax; je 0x1642; call rax; 
0x0000000000400634: mov rax, qword ptr [rip + 0x2019bd]; test rax, rax; je 0x1642; call rax; add rsp, 8; ret; 
0x000000000040079a: mov rbp, rsp; call 0x1720; mov byte ptr [rip + 0x2018ef], 1; pop rbp; ret; 
0x0000000000400844: mov rdi, rax; call 0x16b0; nop; pop rbp; ret; 
0x0000000000400743: nop dword ptr [rax + rax]; pop rbp; ret; 
0x0000000000400785: nop dword ptr [rax]; pop rbp; ret; 
0x0000000000400941: nop; leave; ret; 
0x0000000000400809: nop; pop rbp; ret; 
0x0000000000400633: or byte ptr [rax - 0x75], cl; add eax, 0x2019bd; test rax, rax; je 0x1642; call rax; 
0x00000000004007a4: out dx, eax; sbb byte ptr [rax], ah; add byte ptr [rcx], al; pop rbp; ret; 
0x0000000000400b2c: pop r12; pop r13; pop r14; pop r15; ret; 
0x0000000000400b2e: pop r13; pop r14; pop r15; ret; 
0x0000000000400b30: pop r14; pop r15; ret; 
0x0000000000400b32: pop r15; ret; 
0x000000000040073b: pop rbp; mov edi, 0x602070; jmp rax; 
0x0000000000400b2b: pop rbp; pop r12; pop r13; pop r14; pop r15; ret; 
0x0000000000400b2f: pop rbp; pop r14; pop r15; ret; 
0x0000000000400748: pop rbp; ret; 
0x0000000000400b33: pop rdi; ret; 
0x0000000000400b31: pop rsi; pop r15; ret; 
0x0000000000400b2d: pop rsp; pop r13; pop r14; pop r15; ret; 
0x0000000000400799: push rbp; mov rbp, rsp; call 0x1720; mov byte ptr [rip + 0x2018ef], 1; pop rbp; ret; 
0x00000000004009af: ret 0x8b48; 
0x000000000040089a: ret 0xfffd; 
0x0000000000400646: ret; 
0x000000000040063d: sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x00000000004007a5: sbb byte ptr [rax], ah; add byte ptr [rcx], al; pop rbp; ret; 
0x0000000000400638: sbb dword ptr [rax], esp; add byte ptr [rax - 0x7b], cl; sal byte ptr [rdx + rax - 1], 0xd0; add rsp, 8; ret; 
0x00000000004008ff: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x190a; call 0x1670; leave; ret; 
0x00000000004009c0: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x19cb; call 0x1670; leave; ret; 
0x0000000000400abc: sub byte ptr [rax], al; add byte ptr [rax], al; je 0x1ac7; call 0x1670; leave; ret; 
0x0000000000400b45: sub esp, 8; add rsp, 8; ret; 
0x0000000000400631: sub esp, 8; mov rax, qword ptr [rip + 0x2019bd]; test rax, rax; je 0x1642; call rax; 
0x0000000000400b44: sub rsp, 8; add rsp, 8; ret; 
0x0000000000400630: sub rsp, 8; mov rax, qword ptr [rip + 0x2019bd]; test rax, rax; je 0x1642; call rax; 
0x0000000000400ac3: test eax, 0xc9fffffb; ret; 
0x000000000040063c: test eax, eax; je 0x1642; call rax; 
0x000000000040063c: test eax, eax; je 0x1642; call rax; add rsp, 8; ret; 
0x0000000000400737: test eax, eax; je 0x1748; pop rbp; mov edi, 0x602070; jmp rax; 
0x0000000000400779: test eax, eax; je 0x1788; pop rbp; mov edi, 0x602070; jmp rax; 
0x000000000040063b: test rax, rax; je 0x1642; call rax; 
0x000000000040063b: test rax, rax; je 0x1642; call rax; add rsp, 8; ret; 
0x0000000000400736: test rax, rax; je 0x1748; pop rbp; mov edi, 0x602070; jmp rax; 
0x0000000000400778: test rax, rax; je 0x1788; pop rbp; mov edi, 0x602070; jmp rax; 
0x0000000000400895: wait; add eax, dword ptr [rax]; add al, ch; ret 0xfffd; 

137 gadgets found
